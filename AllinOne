#!/bin/sh

PARAMETER=$1
BROWSER=firefox
TERMINAL=footclient

emoji() {
    cat ~/.local/usr/data/emoji |
        bemenu --fn 'Cartograph CF Italic 16' -H 40 -l 20 -i -p "copy emoji: " --scrollbar always |
        choose 0 |
        wl-copy -n -p
}

clipboard_his() {
    clipgirl --list |
        bemenu --fn 'Cartograph CF Italic 16' -H 40 -l 20 -i -p "copy clipboard: " --scrollbar always |
        wl-copy -n
    # animation keypress shift+insert
    wtype -M shift -k insert -m shift
}

run_app() {
    bemenu-run --fn 'Cartograph CF Italic 16' -H 40 -l 8 -i -p "Let's Run: " --scrollbar always
}

to_translate() {
    echo | bemenu --fn 'Cartograph CF Italic 20' -i -p "translate: " | xargs translate
}

translate() {
    wl-paste | xargs -I@ translate @
}

screenshot() {
    grim -g "$(slurp -c '##ff0000ff')" - |
        satty --filename - --output-filename /tmp/satty-$(date '+%Y%m%d-%H:%M:%S').png
}

full_screenshot() {
    grim -g "$(slurp)" - | wl-copy
}

notify_his() {
    dunstctl history-pop
}

close_notify() {
    dunstctl close
}

hide_waybar() {
    killall -SIGUSR1 waybar
}

picker_color() {
    hyprpicker | wl-copy -n
}

hypr_switch_ws() {
    hyprctl dispatch workspace previous
}

change_volume() {
    OPERATE=${1:-""}
    CHANGE=${2:-5}

    amixer sget Master | tail -n1 | rg off 1>/dev/null && ifmute="true"
    current=$(amixer sget Master | tail -n1 | cut -d'%' -f1 | cut -d'[' -f2)
    volume=$(expr $current $OPERATE $CHANGE)

    [ "$ifmute" = "true" ] && notify-send -u critical "Notice: sound has been muted" || {
        amixer sset Master ${CHANGE}%${OPERATE}
        notify-send -h string:frcolor:#d5cecb \
            -h int:value:${volume} \
            -h string:x-dunst-stack-tag:volume \
            "sound volume: ${volume}%" \
            -t 1000
    }
}

change_brightness() {
    OPERATE=$1
    VALUE=${2:-2}
    FILE=/tmp/.brightness.current

    [ ! -e $FILE ] && {
        touch $FILE
        ddcutil getvcp 10 | rg -o "current value .*," | choose 3 | tr -d "," >$FILE
    }

    current=$(cat $FILE)
    brightness=$(expr $current $OPERATE $VALUE)

    if [ $brightness -lt 0 ]; then
        notify-send "brightness less than 0"
        exit 1
    else
        # use dunst to show a status bar of brightness.
        notify-send -h string:frcolor:#d5cecb \
            -h int:value:${brightness} \
            -h string:x-dunst-stack-tag:brightness \
            "brightness: ${brightness}" \
            -t 1000

        # load module if not loaded yet and change brightness
        lsmod | rg i2c || doas modprobe i2c-dev
        ddcutil setvcp 10 $OPERATE $VALUE
        echo $brightness >$FILE
    fi
}

search() {
    content=$(echo "" | bemenu --fn 'Cartograph CF Italic 20' -l 0 -i -p "Searching: ")
    [ "$?" = 0 ] && $BROWSER --search --new-tab "https://search.rhscz.eu/search?q=${content}&category_general=1&language=all&time_range=&safesearch=0&theme=simple"
}

surf() {
    pgrep caddy &>/dev/null || caddy file-server --listen :8080 --browse --root ~/.local/share/yacd/public/ &
    /home/mandalorian/.local/share/surf/start_surf "http://localhost:8080/#/proxies"
}

note() {
    $TERMINAL -T "scratchpad_note" sh -c "nvim ~/.local/usr/data/content"
}

case $PARAMETER in
"--emoji") emoji ;;
"--clipboard_his") clipboard_his ;;
"--run_app") run_app ;;
"--to_translate") to_translate ;;
"--translate") translate ;;
"--screenshot") screenshot ;;
"--full_screenshot") full_screenshot ;;
"--notify_his") notify_his ;;
"--close_notify") close_notify ;;
"--hide_waybar") hide_waybar ;;
"--picker_color") picker_color ;;
"--hypr_switch_ws") hypr_switch_ws ;;
"--change_volume") change_volume $2 $3 ;;
"--change_brightness") change_brightness $2 $3 ;;
"--search") search ;;
"--surf") surf ;;
"--note") note ;;
"*") ;;
esac
